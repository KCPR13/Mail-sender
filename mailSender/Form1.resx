<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="attachementPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGRkAAAEAIABQCgAAFgAAACgAAAAZAAAAMgAAAAEAIAAAAAAAxAkAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQTQb/0E0G/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQTQb/0E0G/wAAAAAAAAAAzEwFMc9MBYTQTAbLz00G7tBM
        BvzQTQb1z0wG0c5MBYHAUAAPAAAAAAAAAAAAAAAA0E0G/9BNBv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0E0G/9BNBv8AAAAAAAAAANBNBv/QTQb/0E0G/9BNBv/QTQb/0E0G/9BNBv/QTQb/0E0F4MhI
        CB8AAAAAAAAAANBNBv/QTQb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANBNBv/QTQb/AAAAAAAA
        AADQTQXWz00GectOBDrDSQAUgEAAA8BQAA/MTAQ7z0wFttBNBv/PTAWtAAAAAAAAAADQTQb/0E0G/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQTQb/0E0G/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMdHABHQTQb/z00G9AAAAAAAAAAA0E0G/9BNBv8AAAAAAAAAAMpNBSrPTAb9zk4HIwAA
        AAAAAAAA0E0G/9BNBv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMTAdF0E0G/9BM
        BeUAAAAAAAAAANBNBv/QTQb/AAAAAAAAAADQTAaV0E0G/89MBY4AAAAAAAAAANBNBv/QTQb/AAAAAAAA
        AAAAAAAAAAAAAAAAAADAUAAPy04EOs1MBGrPTAanz0wG+dBNBv/OTAWFAAAAAAAAAADQTQb/0E0G/wAA
        AADJSQANz0wG8tBNBqXQTAbvukUACgAAAADQTQb/0E0G/wAAAAAAAAAAAAAAAM5LBk3PTQbDz0wG/dBN
        Bv/QTQb/0E0G/89MBeLPTQZzqlUAAgAAAAAAAAAA0E0G/9BNBv8AAAAAzksHa89NBu66RQAK0E0F1s5N
        BGYAAAAA0E0G/9BNBv8AAAAAAAAAAM5LBWHQTQb/0E0G/89NBsnQTQWKzUsFW8tLBSuAAAABAAAAAAAA
        AAAAAAAAAAAAANBNBv/QTQb/AAAAANBMBdXOTAWLAAAAAM9MBm3PTAbSAAAAANBNBv/QTQb/AAAAAAAA
        AADPTQXZ0E0G/81NBV8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQTQb/0E0G/81N
        B0HPTAb9yU0HIAAAAADAUAAPz00G9MxMBD/QTQb/0E0G/wAAAAAAAAAAz00G+NBNBv/JSQANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0E0G/9BNBv/PTAWs0EwFsAAAAAAAAAAAAAAAAM5N
        BpvOTQWr0E0G/9BNBv8AAAAAAAAAAM9NBsnQTQb/z0wGosxJBSzHOAAIukUACsxJBSzPTQRpz00GzQAA
        AAAAAAAAAAAAANBNBv/QTQb/0E0G+89LB0MAAAAAAAAAAAAAAADNSwUy0E0G+9BNBv/QTQb/AAAAAAAA
        AADNTQQ3z0wG8tBNBv/QTQb/0E0G/9BNBv/QTQb/0E0G/9BNBv8AAAAAAAAAAAAAAADQTQb/0E0G/9BM
        BdUAAAAAAAAAAAAAAAAAAAAAAAAAAM9NBsnQTQb/0E0G/wAAAAAAAAAAAAAAAMxJByLPTAadz0wF4tBN
        BvvPTQb0z0wG1M5NBpvNSwdGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////gP///4D///+A////gP//
        /4D///+A////gM/mAIDP5gAAz+YAAM/n/ADMZ/wAzGfAAMgnAADIJgGAySY/gMEGP4DDhgCAw4YAgMfH
        AID///+A////gP///4D///+A////gA==
</value>
  </data>
</root>