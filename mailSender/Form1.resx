<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="attachementPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>